@model IEnumerable<LatiumMarketplace.Models.MessageViewModels.MessageThread>

@{
    ViewData["Title"] = "Index";
}

@*<script>
    function updateMessageThreadCount(id) {
        console.log("In decrementMessageNotificationCount.");
        var messageReadUnreadDTO = { Id: '@Model.MessageThreadId', IsSender: isSender };
        $.ajax({
            url: '@Url.Action("DecrementMessageNotificationCount", "MessageThreadAPI")',
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify(messageReadUnreadDTO),
            success: function () {
                console.log("Successfully decremented count");
            },
            error: function (error) {
                console.log(error)
                var x = error; //break here for debugging.
            }
        });
    }
</script>*@

<div class="spaceUnderLogo">

    <h2>Current Discussions</h2>
    <table class="table">
        <thead>
            <tr>
                <th>
                    Discussion with:
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LastUpdateDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.asset.name)
                </th>
                @*<th>
                </th>*@
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    @if (item.RecieverEmail == User.Identity.Name)
                    {
                        <td>
                            @Html.DisplayFor(modelItem => item.SenderEmail)
                        </td>
                    }
                    else
                    {
                        <td>
                            @Html.DisplayFor(modelItem => item.RecieverEmail)
                        </td>
                    }
                    <td>
                        @Html.DisplayFor(modelItem => item.LastUpdateDate)
                    </td>
                    <td>
                        @if (item.asset == null)
                        {
                            <span>N/A</span>
                        }
                        else
                        {
                            @Html.DisplayFor(modelItem => item.asset.name)
                        }
                    </td>
                    @*<td>
                        <span id="'@item.id.ToString()'new" class="label label-default" style="display:none;"></span>

                    </td>*@
                    <td>
                        <a asp-action="Details" asp-route-id="@item.id">Messages</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>